CREATE DATABASE IF NOT EXISTS deposito; USE deposito; CREATE TABLE tb_cliente (   id_cliente INT NOT NULL AUTO_INCREMENT,   cpf_cliente CHAR(11) NOT NULL,   nm_cliente VARCHAR(45) NOT NULL,   nm_email_cliente VARCHAR(45) NOT NULL,   nr_telefone_cliente VARCHAR(15) NOT NULL,     nm_endereco_cliente VARCHAR(100) NOT NULL,     nr_endereco_cliente INT NOT NULL,   PRIMARY KEY (id_cliente),   UNIQUE (cpf_cliente) ); CREATE TABLE tb_fornecedores (   id_fornecedor INT NOT NULL AUTO_INCREMENT,   nm_fornecedor VARCHAR(45) NOT NULL,   cnpj_fornecedor CHAR(14) NOT NULL,   nm_endereco_fornecedor VARCHAR(100) NOT NULL,   PRIMARY KEY (id_fornecedor),   UNIQUE (cnpj_fornecedor) ); CREATE TABLE tb_produtos (   id_produto INT NOT NULL AUTO_INCREMENT,   id_fornecedor INT NOT NULL,   nm_produto VARCHAR(45) NOT NULL,   ds_produto VARCHAR(100) NOT NULL,   qt_estoque_produto INT NOT NULL,     vl_unitario_produto DECIMAL(10,2) NOT NULL,   PRIMARY KEY (id_produto),   FOREIGN KEY (id_fornecedor) REFERENCES tb_fornecedores(id_fornecedor) ); CREATE TABLE tb_estoque (   id_estoque INT NOT NULL AUTO_INCREMENT,   qt_atual_produtos INT NOT NULL,   fk_produto INT NOT NULL,   PRIMARY KEY (id_estoque),   FOREIGN KEY (fk_produto) REFERENCES tb_produtos(id_produto) ); CREATE TABLE tb_mov_estoque (   id_movimentacao INT NOT NULL AUTO_INCREMENT,   fk_produto INT NOT NULL,   fk_estoque INT NOT NULL,   tipo_movimentacao ENUM('ENTRADA', 'SAÍDA') NOT NULL,   qt_movimentada INT NOT NULL,   dt_movimentacao DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,   PRIMARY KEY (id_movimentacao),   FOREIGN KEY (fk_produto) REFERENCES tb_produtos(id_produto),   FOREIGN KEY (fk_estoque) REFERENCES tb_estoque(id_estoque) ); CREATE TABLE tb_pedido (   id_pedido INT NOT NULL AUTO_INCREMENT,   dt_pedido DATE NOT NULL,   nm_status_pedido VARCHAR(45) NOT NULL,   nr_total_pedidos INT NOT NULL,   fk_cliente INT NOT NULL,   PRIMARY KEY (id_pedido),   FOREIGN KEY (fk_cliente) REFERENCES tb_cliente(id_cliente) ); CREATE TABLE fk_produtos_pedidos (   fk_produto INT NOT NULL,   fk_pedido INT NOT NULL,   qt_produto INT NOT NULL,   PRIMARY KEY (fk_produto, fk_pedido),   FOREIGN KEY (fk_produto) REFERENCES tb_produtos(id_produto),   FOREIGN KEY (fk_pedido) REFERENCES tb_pedido(id_pedido) ); CREATE TABLE fk_produtos_clientes (   fk_produto INT NOT NULL,   fk_cliente INT NOT NULL,   PRIMARY KEY (fk_produto, fk_cliente),   FOREIGN KEY (fk_produto) REFERENCES tb_produtos(id_produto),   FOREIGN KEY (fk_cliente) REFERENCES tb_cliente(id_cliente) ); INSERT INTO tb_cliente (cpf_cliente, nm_cliente, nm_email_cliente, nr_telefone_cliente, nm_endereco_cliente, nr_endereco_cliente) VALUES ('12345678901', 'João da Silva', 'joao@email.com', '11999999999', 'Rua das Flores', 123), ('23456789012', 'Maria Oliveira', 'maria@email.com', '11988888888', 'Avenida Brasil', 456); INSERT INTO tb_fornecedores (nm_fornecedor, cnpj_fornecedor, nm_endereco_fornecedor) VALUES ('Fornecedor A', '12345678000199', 'Rua do Comércio, 50'), ('Fornecedor B', '98765432000188', 'Avenida Central, 100'); INSERT INTO tb_produtos (id_fornecedor, nm_produto, ds_produto, qt_estoque_produto, vl_unitario_produto) VALUES (1, 'Produto 1', 'Descrição do produto 1', 100, 10.50), (2, 'Produto 2', 'Descrição do produto 2', 200, 20.00); INSERT INTO tb_estoque (qt_atual_produtos, fk_produto) VALUES (100, 1), (200, 2); INSERT INTO tb_pedido (dt_pedido, nm_status_pedido, nr_total_pedidos, fk_cliente) VALUES ('2025-06-25', 'Em Processamento', 2, 1); INSERT INTO fk_produtos_pedidos (fk_produto, fk_pedido, qt_produto) VALUES (1, 1, 1), (2, 1, 1); INSERT INTO fk_produtos_clientes (fk_produto, fk_cliente) VALUES (1, 1), (2, 1); SELECT * FROM tb_cliente; SELECT nm_produto, ds_produto, qt_estoque_produto, vl_unitario_produto FROM tb_produtos; SELECT p.id_pedido, p.dt_pedido, p.nm_status_pedido, c.nm_cliente FROM tb_pedido p JOIN tb_cliente c ON p.fk_cliente = c.id_cliente; UPDATE tb_cliente SET nm_email_cliente = 'joaosilva@novoemail.com' WHERE cpf_cliente = '12345678901'; UPDATE tb_produtos SET qt_estoque_produto = qt_estoque_produto - 1 WHERE id_produto = 1; DELETE FROM fk_produtos_clientes WHERE fk_cliente = 2 AND fk_produto = 2; DELETE FROM tb_cliente WHERE id_cliente = 2;

sim, ta tudo em uma linha só pq eu nao consegui separar, da um crtl C + V e só cola no workbench e deleta essa ultima frase, tmj